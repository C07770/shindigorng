Profiles and VIVO version!
Prerequisites
	Java 1.6 or higher
	Git
	Maven
	Tomcat 6.x or higher (to run)
	Eclipse 3.7 or higher (optional for building and debugging)
	
Download
	Create an empty directory and from Git Bash type:
		>git clone git@github.com:CTSIatUCSF/shindigorng.git

	A shindigorng sub-directory will be created with the contents of the code
	
Build
	The project can be built with Maven, but first you need to install some external jars into your maven repository. 
	This is a pain, but you only have to do it once.
	
	Note: The \'s need to be appropriate for your operating system!  The following instructions show Windows style slashes, 
	use UNIX style as appropriate.
	
	Go to ..\orng-connector\jars\ and type the following commands:
		>mvn install:install-file -Dfile=jdbc4-3.0.jar -DgroupId=com.microsoft.jdbc -DartifactId=jdbc4 -Dversion=3.0 -Dpackaging=jar
		>mvn install:install-file -Dfile=jsonld-java\jsonld-java-0.2-SNAPSHOT.jar -DpomFile=jsonld-java\pom.xml
		>mvn install:install-file -Dfile=jsonld-java-jena\jsonld-java-jena-0.2-SNAPSHOT.jar -DpomFile=jsonld-java-jena\pom.xml

	See http://maven.apache.org/guides/mini/guide-3rd-party-jars-local.html for more details
	
	Now just go to the top shindigorng directory and run maven:
		>mvn
		
	The shindigorng\java\server\target\shindig-server-2.0.2.war file will be created.
	
Install
	Create a C:\shindig\conf directory.  
	Copy the shindigorng\java\orng-connector\conf\shindigorng.properties file into the directory and edit as needed 
	for your environment.  
	
	Make sure Tomcat isn't running!

	Put shindig-server-2.0.2.war into your webapps directory under Tomcat and rename to shindigorng.war

	Please view the screenshot-apache.JPG file for an example of the following,
		Add C:\shindig\conf to the BEGINNING of your Java Classpath in Tomcat.
		Add the following two lines to Java Options for Tomcat 
			-Dshindig.host=<your profiles host machine>
			-Dshindig.port=80
			
	Create a secure key for Shindig.  
		The default location for this key is \shindig\openssl\securitytokenkey.txt as set in 
		shindigorng\java\orng-connector\src\main\resources\orng-container.js
		The easiest way to create the key is to find a linux machine and issue the following command:
			>dd if=/dev/random bs=32 count=1  | openssl base64 > securitytokenkey.txt 

		
		Profiles users: you can then copy this over to your Profiles windows machine, and place it in a \shindig\openssl directory 
		that you will need to create.

	Start Tomcat.  
	
Eclipse
	Create your eclipse workspace one directory above shindigorng
	Import the projects as maven projects:
		File->Import...->Maven->Existing Maven Projects
		Select your workspace directory (the one immediately above shindigorng)
		Accept the default of all pom.xml's being recognized

	To build/clean the project:
		Right click shindigorng 
			Run As->Maven build
			Run as->Maven clean

	To run in the Debugger
		Open the Java EE perspective
		On Servers tab, right click and add your Tomcat server.
		Double click on the server to bring up the configuration screen.  
		Click to the Modules tab (botton of pane), add an external web module and browse to the exploded 
		shindig-server-2.0.2 WAR (shown below)  
		Set path to /shindigorng:
			Document base: ..\shindigorng\java\server\target\shindig-server-2.0.2
			Path /shindigorng 
	
		Click back to the Overview tab
		Click the 'Open launch configuration' in the upper left at the bottom of the General Information section.
		On the (x)= Arguments tab add the Java Options as outlined above:
			-Dshindig.host=<your profiles host machine>
			-Dshindig.port=80
			
		On the Classpath tab add C:\shindig\conf under User Entries
			Advanced..->Add External Folder  
			
		You can now run and debug shindigorng by starting Tomcat from Eclipse 
			